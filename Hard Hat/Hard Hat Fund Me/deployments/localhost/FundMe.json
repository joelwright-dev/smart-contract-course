{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__CallFail",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FundMe__LowInput",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "fundingAddress",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xd66a174bf7b255e812464f0c5debd8f17fedf7f0de7d233bc03295b11791e43b",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "978546",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x959a997245d6398e33b6abc12c9d3019eb9e214cc35567be86dd40598baa2a89",
    "transactionHash": "0xd66a174bf7b255e812464f0c5debd8f17fedf7f0de7d233bc03295b11791e43b",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "978546",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "e1c3154b4b6f79f401201ede9c72209a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__CallFail\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FundMe__LowInput\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundingAddress\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Joel Wright\",\"details\":\"This implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"This function funds this contract\"},\"withdraw()\":{\"notice\":\"This function withdraws the funds from the contract into the owner wallet\"}},\"notice\":\"This contract is to demo a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"./PriceConverter.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nerror FundMe__NotOwner();\\nerror FundMe__CallFail();\\nerror FundMe__LowInput();\\n\\n/**\\n * @title A contract for crowd funding\\n * @author Joel Wright\\n * @notice This contract is to demo a sample funding contract\\n * @dev This implements price feeds as our library\\n */\\n\\ncontract FundMe {\\n\\tusing PriceConverter for uint256;\\n\\n\\tuint256 public constant MINIMUM_USD = 50 * 1e18;\\n\\taddress[] public s_funders;\\n\\tmapping(address => uint256) private s_addressToAmountFunded;\\n\\taddress private immutable i_owner;\\n\\tAggregatorV3Interface private s_priceFeed;\\n\\n\\tmodifier onlyOwner() {\\n\\t\\tif (msg.sender != i_owner) {\\n\\t\\t\\trevert FundMe__NotOwner();\\n\\t\\t}\\n\\t\\t_;\\n\\t}\\n\\n\\tconstructor(address priceFeedAddress) {\\n\\t\\ti_owner = msg.sender;\\n\\t\\ts_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n\\t}\\n\\n\\treceive() external payable {\\n\\t\\tfund();\\n\\t}\\n\\n\\tfallback() external payable {\\n\\t\\tfund();\\n\\t}\\n\\n\\t/**\\n\\t * @notice This function funds this contract\\n\\t */\\n\\tfunction fund() public payable {\\n\\t\\tif (msg.value.getConversionRate(s_priceFeed) < MINIMUM_USD) {\\n\\t\\t\\trevert FundMe__LowInput();\\n\\t\\t}\\n\\t\\ts_funders.push(msg.sender);\\n\\t\\ts_addressToAmountFunded[msg.sender] += msg.value;\\n\\t}\\n\\n\\t/**\\n\\t * @notice This function withdraws the funds from the contract into the owner wallet\\n\\t */\\n\\tfunction withdraw() public onlyOwner {\\n\\t\\tfor (\\n\\t\\t\\tuint256 funderIndex = 0;\\n\\t\\t\\tfunderIndex < s_funders.length;\\n\\t\\t\\tfunderIndex++\\n\\t\\t) {\\n\\t\\t\\taddress funder = s_funders[funderIndex];\\n\\t\\t\\ts_addressToAmountFunded[funder] = 0;\\n\\t\\t}\\n\\n\\t\\ts_funders = new address[](0);\\n\\n\\t\\t(bool callSuccess, ) = payable(msg.sender).call{\\n\\t\\t\\tvalue: address(this).balance\\n\\t\\t}(\\\"\\\");\\n\\t\\tif (!callSuccess) {\\n\\t\\t\\trevert FundMe__CallFail();\\n\\t\\t}\\n\\t}\\n\\n\\tfunction cheaperWithdraw() public onlyOwner {\\n\\t\\taddress[] memory funders = s_funders;\\n\\t\\tfor (\\n\\t\\t\\tuint256 funderIndex = 0;\\n\\t\\t\\tfunderIndex < funders.length;\\n\\t\\t\\tfunderIndex++\\n\\t\\t) {\\n\\t\\t\\taddress funder = funders[funderIndex];\\n\\t\\t\\ts_addressToAmountFunded[funder] = 0;\\n\\t\\t}\\n\\t\\ts_funders = new address[](0);\\n\\t\\t(bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n\\t\\trequire(success);\\n\\t}\\n\\n\\tfunction getAddressToAmountFunded(address fundingAddress)\\n\\t\\tpublic\\n\\t\\tview\\n\\t\\treturns (uint256)\\n\\t{\\n\\t\\treturn s_addressToAmountFunded[fundingAddress];\\n\\t}\\n\\n\\tfunction getPriceFeed() public view returns (AggregatorV3Interface) {\\n\\t\\treturn s_priceFeed;\\n\\t}\\n\\n\\tfunction getOwner() public view returns (address) {\\n\\t\\treturn i_owner;\\n\\t}\\n}\\n\",\"keccak256\":\"0x751986c344bc06c2db20dcb8d9d9cf4463d8edc56a6dfaa4587badee95e3f87e\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n\\tfunction getPrice(AggregatorV3Interface priceFeed)\\n\\t\\tinternal\\n\\t\\tview\\n\\t\\treturns (uint256)\\n\\t{\\n\\t\\t(, int256 answer, , , ) = priceFeed.latestRoundData();\\n\\t\\treturn uint256(answer * 1e10);\\n\\t}\\n\\n\\tfunction getConversionRate(\\n\\t\\tuint256 ethAmount,\\n\\t\\tAggregatorV3Interface priceFeed\\n\\t) internal view returns (uint256) {\\n\\t\\tuint256 ethPrice = getPrice(priceFeed);\\n\\t\\tuint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n\\t\\treturn ethAmountInUsd;\\n\\t}\\n}\\n\",\"keccak256\":\"0x1aced358fc242d0ed525321718228edc72e2b72d55b87daa5ad0f3c9ed2f55ba\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620011da380380620011da8339818101604052810190620000379190620000cd565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600081519050620000c78162000138565b92915050565b600060208284031215620000e657620000e562000133565b5b6000620000f684828501620000b6565b91505092915050565b60006200010c8262000113565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200014381620000ff565b81146200014f57600080fd5b50565b60805160601c6110546200018660003960008181610348015281816105cd0152818161061d015261081301526110546000f3fe60806040526004361061007f5760003560e01c8063893d20e81161004e578063893d20e8146101545780639e87a5cd1461017f578063b60d4288146101aa578063be2693f0146101b45761008e565b80630343fb25146100985780633ccfd60b146100d557806354861af7146100ec5780636b69a592146101295761008e565b3661008e5761008c6101cb565b005b6100966101cb565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610a95565b6102fd565b6040516100cc9190610c05565b60405180910390f35b3480156100e157600080fd5b506100ea610346565b005b3480156100f857600080fd5b50610113600480360381019061010e9190610ac2565b61057d565b6040516101209190610bcf565b60405180910390f35b34801561013557600080fd5b5061013e6105bc565b60405161014b9190610c05565b60405180910390f35b34801561016057600080fd5b506101696105c9565b6040516101769190610bcf565b60405180910390f35b34801561018b57600080fd5b506101946105f1565b6040516101a19190610bea565b60405180910390f35b6101b26101cb565b005b3480156101c057600080fd5b506101c961061b565b005b6802b5e3af16b188000061020a600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108a990919063ffffffff16565b1015610242576040517f858432c900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102f49190610c2b565b92505081905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103cb576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156104765760008082815481106103f0576103ef610f5c565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061046e90610eb5565b9150506103ce565b50600067ffffffffffffffff81111561049257610491610f8b565b5b6040519080825280602002602001820160405280156104c05781602001602082028036833780820191505090505b50600090805190602001906104d6929190610985565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104fd90610bba565b60006040518083038185875af1925050503d806000811461053a576040519150601f19603f3d011682016040523d82523d6000602084013e61053f565b606091505b505090508061057a576040517f507766e200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b6000818154811061058d57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106a0576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008080548060200260200160405190810160405280929190818152602001828054801561072357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106d9575b5050505050905060005b81518110156107ae57600082828151811061074b5761074a610f5c565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806107a690610eb5565b91505061072d565b50600067ffffffffffffffff8111156107ca576107c9610f8b565b5b6040519080825280602002602001820160405280156107f85781602001602082028036833780820191505090505b506000908051906020019061080e929190610985565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161085590610bba565b60006040518083038185875af1925050503d8060008114610892576040519150601f19603f3d011682016040523d82523d6000602084013e610897565b606091505b50509050806108a557600080fd5b5050565b6000806108b5836108e5565b90506000670de0b6b3a764000085836108ce9190610dc9565b6108d89190610c81565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561092e57600080fd5b505afa158015610942573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109669190610aef565b5050509150506402540be4008161097d9190610cb2565b915050919050565b8280548282559060005260206000209081019282156109fe579160200282015b828111156109fd5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109a5565b5b509050610a0b9190610a0f565b5090565b5b80821115610a28576000816000905550600101610a10565b5090565b600081359050610a3b81610fc2565b92915050565b600081519050610a5081610fd9565b92915050565b600081359050610a6581610ff0565b92915050565b600081519050610a7a81610ff0565b92915050565b600081519050610a8f81611007565b92915050565b600060208284031215610aab57610aaa610fba565b5b6000610ab984828501610a2c565b91505092915050565b600060208284031215610ad857610ad7610fba565b5b6000610ae684828501610a56565b91505092915050565b600080600080600060a08688031215610b0b57610b0a610fba565b5b6000610b1988828901610a80565b9550506020610b2a88828901610a41565b9450506040610b3b88828901610a6b565b9350506060610b4c88828901610a6b565b9250506080610b5d88828901610a80565b9150509295509295909350565b610b7381610e23565b82525050565b610b8281610e7f565b82525050565b6000610b95600083610c20565b9150610ba082610fbf565b600082019050919050565b610bb481610e5f565b82525050565b6000610bc582610b88565b9150819050919050565b6000602082019050610be46000830184610b6a565b92915050565b6000602082019050610bff6000830184610b79565b92915050565b6000602082019050610c1a6000830184610bab565b92915050565b600081905092915050565b6000610c3682610e5f565b9150610c4183610e5f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610c7657610c75610efe565b5b828201905092915050565b6000610c8c82610e5f565b9150610c9783610e5f565b925082610ca757610ca6610f2d565b5b828204905092915050565b6000610cbd82610e35565b9150610cc883610e35565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d0757610d06610efe565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d4457610d43610efe565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610d8157610d80610efe565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610dbe57610dbd610efe565b5b828202905092915050565b6000610dd482610e5f565b9150610ddf83610e5f565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e1857610e17610efe565b5b828202905092915050565b6000610e2e82610e3f565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610e8a82610e91565b9050919050565b6000610e9c82610ea3565b9050919050565b6000610eae82610e3f565b9050919050565b6000610ec082610e5f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610ef357610ef2610efe565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b50565b610fcb81610e23565b8114610fd657600080fd5b50565b610fe281610e35565b8114610fed57600080fd5b50565b610ff981610e5f565b811461100457600080fd5b50565b61101081610e69565b811461101b57600080fd5b5056fea264697066735822122024681ab71ddf7fa5ab5d9d94a299178328a61c4e6d1a3746612883d144d6f10864736f6c63430008070033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c8063893d20e81161004e578063893d20e8146101545780639e87a5cd1461017f578063b60d4288146101aa578063be2693f0146101b45761008e565b80630343fb25146100985780633ccfd60b146100d557806354861af7146100ec5780636b69a592146101295761008e565b3661008e5761008c6101cb565b005b6100966101cb565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610a95565b6102fd565b6040516100cc9190610c05565b60405180910390f35b3480156100e157600080fd5b506100ea610346565b005b3480156100f857600080fd5b50610113600480360381019061010e9190610ac2565b61057d565b6040516101209190610bcf565b60405180910390f35b34801561013557600080fd5b5061013e6105bc565b60405161014b9190610c05565b60405180910390f35b34801561016057600080fd5b506101696105c9565b6040516101769190610bcf565b60405180910390f35b34801561018b57600080fd5b506101946105f1565b6040516101a19190610bea565b60405180910390f35b6101b26101cb565b005b3480156101c057600080fd5b506101c961061b565b005b6802b5e3af16b188000061020a600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108a990919063ffffffff16565b1015610242576040517f858432c900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102f49190610c2b565b92505081905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103cb576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156104765760008082815481106103f0576103ef610f5c565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061046e90610eb5565b9150506103ce565b50600067ffffffffffffffff81111561049257610491610f8b565b5b6040519080825280602002602001820160405280156104c05781602001602082028036833780820191505090505b50600090805190602001906104d6929190610985565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104fd90610bba565b60006040518083038185875af1925050503d806000811461053a576040519150601f19603f3d011682016040523d82523d6000602084013e61053f565b606091505b505090508061057a576040517f507766e200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b6000818154811061058d57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106a0576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008080548060200260200160405190810160405280929190818152602001828054801561072357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106d9575b5050505050905060005b81518110156107ae57600082828151811061074b5761074a610f5c565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806107a690610eb5565b91505061072d565b50600067ffffffffffffffff8111156107ca576107c9610f8b565b5b6040519080825280602002602001820160405280156107f85781602001602082028036833780820191505090505b506000908051906020019061080e929190610985565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161085590610bba565b60006040518083038185875af1925050503d8060008114610892576040519150601f19603f3d011682016040523d82523d6000602084013e610897565b606091505b50509050806108a557600080fd5b5050565b6000806108b5836108e5565b90506000670de0b6b3a764000085836108ce9190610dc9565b6108d89190610c81565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561092e57600080fd5b505afa158015610942573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109669190610aef565b5050509150506402540be4008161097d9190610cb2565b915050919050565b8280548282559060005260206000209081019282156109fe579160200282015b828111156109fd5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109a5565b5b509050610a0b9190610a0f565b5090565b5b80821115610a28576000816000905550600101610a10565b5090565b600081359050610a3b81610fc2565b92915050565b600081519050610a5081610fd9565b92915050565b600081359050610a6581610ff0565b92915050565b600081519050610a7a81610ff0565b92915050565b600081519050610a8f81611007565b92915050565b600060208284031215610aab57610aaa610fba565b5b6000610ab984828501610a2c565b91505092915050565b600060208284031215610ad857610ad7610fba565b5b6000610ae684828501610a56565b91505092915050565b600080600080600060a08688031215610b0b57610b0a610fba565b5b6000610b1988828901610a80565b9550506020610b2a88828901610a41565b9450506040610b3b88828901610a6b565b9350506060610b4c88828901610a6b565b9250506080610b5d88828901610a80565b9150509295509295909350565b610b7381610e23565b82525050565b610b8281610e7f565b82525050565b6000610b95600083610c20565b9150610ba082610fbf565b600082019050919050565b610bb481610e5f565b82525050565b6000610bc582610b88565b9150819050919050565b6000602082019050610be46000830184610b6a565b92915050565b6000602082019050610bff6000830184610b79565b92915050565b6000602082019050610c1a6000830184610bab565b92915050565b600081905092915050565b6000610c3682610e5f565b9150610c4183610e5f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610c7657610c75610efe565b5b828201905092915050565b6000610c8c82610e5f565b9150610c9783610e5f565b925082610ca757610ca6610f2d565b5b828204905092915050565b6000610cbd82610e35565b9150610cc883610e35565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d0757610d06610efe565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d4457610d43610efe565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610d8157610d80610efe565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610dbe57610dbd610efe565b5b828202905092915050565b6000610dd482610e5f565b9150610ddf83610e5f565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e1857610e17610efe565b5b828202905092915050565b6000610e2e82610e3f565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610e8a82610e91565b9050919050565b6000610e9c82610ea3565b9050919050565b6000610eae82610e3f565b9050919050565b6000610ec082610e5f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610ef357610ef2610efe565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b50565b610fcb81610e23565b8114610fd657600080fd5b50565b610fe281610e35565b8114610fed57600080fd5b50565b610ff981610e5f565b811461100457600080fd5b50565b61101081610e69565b811461101b57600080fd5b5056fea264697066735822122024681ab71ddf7fa5ab5d9d94a299178328a61c4e6d1a3746612883d144d6f10864736f6c63430008070033",
  "devdoc": {
    "author": "Joel Wright",
    "details": "This implements price feeds as our library",
    "kind": "dev",
    "methods": {},
    "title": "A contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "fund()": {
        "notice": "This function funds this contract"
      },
      "withdraw()": {
        "notice": "This function withdraws the funds from the contract into the owner wallet"
      }
    },
    "notice": "This contract is to demo a sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 67,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 71,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 76,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}